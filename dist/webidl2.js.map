{"version":3,"sources":["webpack://WebIDL2/webpack/universalModuleDefinition","webpack://WebIDL2/webpack/bootstrap","webpack://WebIDL2/./lib/error.js","webpack://WebIDL2/./lib/productions/base.js","webpack://WebIDL2/./lib/validators/helpers.js","webpack://WebIDL2/./lib/productions/type.js","webpack://WebIDL2/./lib/productions/default.js","webpack://WebIDL2/./lib/productions/array-base.js","webpack://WebIDL2/./lib/productions/token.js","webpack://WebIDL2/./lib/productions/extended-attributes.js","webpack://WebIDL2/./lib/productions/argument.js","webpack://WebIDL2/./lib/productions/operation.js","webpack://WebIDL2/./lib/productions/attribute.js","webpack://WebIDL2/./lib/productions/helpers.js","webpack://WebIDL2/./lib/tokeniser.js","webpack://WebIDL2/./lib/productions/enum.js","webpack://WebIDL2/./lib/productions/includes.js","webpack://WebIDL2/./lib/productions/typedef.js","webpack://WebIDL2/./lib/productions/callback.js","webpack://WebIDL2/./lib/productions/container.js","webpack://WebIDL2/./lib/productions/constant.js","webpack://WebIDL2/./lib/productions/iterable.js","webpack://WebIDL2/./lib/productions/constructor.js","webpack://WebIDL2/./lib/productions/interface.js","webpack://WebIDL2/./lib/validators/interface.js","webpack://WebIDL2/./lib/productions/mixin.js","webpack://WebIDL2/./lib/productions/field.js","webpack://WebIDL2/./lib/productions/dictionary.js","webpack://WebIDL2/./lib/productions/namespace.js","webpack://WebIDL2/./lib/productions/callback-interface.js","webpack://WebIDL2/./lib/webidl2.js","webpack://WebIDL2/./lib/writer.js","webpack://WebIDL2/./lib/validator.js","webpack://WebIDL2/./index.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","source","position","current","message","kind","level","autofix","ruleName","sliceTokens","count","slice","Math","max","tokensToText","inputs","precedes","text","map","trivia","join","nextToken","type","length","line","precedingLastLine","splitted","split","lastLine","subsequentTokens","subsequentText","sourceContext","repeat","contextType","context","partial","bareMessage","sourceName","input","tokens","syntaxError","validationError","token","options","index","Base","defineProperties","parent","writable","json","undefined","inheritance","proto","descMap","getOwnPropertyDescriptors","entries","getPrototypeOf","idlTypeIncludesDictionary","idlType","defs","useNullableInner","union","def","unique","typedefIncludesDictionary","cache","has","set","result","reference","dictionary","nullable","subtype","type_suffix","tokeniser","obj","consume","probe","error","single_type","typeName","ret","base","autoParenter","open","return_type","push","type_with_extended_attributes","keyType","stringTypes","keyIdlType","separator","valueType","close","generic_type","primitive_type","typeNameKeywords","generic","typ","or","union_type","super","extAttrs","Boolean","prefix","postfix","filter","typedef","target","targetToken","validate","assign","const_value","expression","const_data","negative","ArrayBase","Array","tokenName","parser","listName","extAttrValueSyntax","secondaryName","list","rhsIsList","syntax","toks","extAttrListItems","argument_list","hasRhs","params","parse","rhsType","arg","arguments","extAttr","start_position","optional","variadic","argumentNameKeywords","default","unconsume","autofixOptionalDictionaryDefaultValue","dictionaryIncludesRequiredField","dict","superdict","members","some","field","required","indexOf","a","isLastRequiredArgument","firstToken","getFirstToken","special","regular","termination","includes","argument","noInherit","readonly","identifier","startsWith","allowDangler","first","items","item","num_type","integer_type","decimal_type","voidToken","stringifier","getLastIndentation","str","lines","match","autofixAddExposedWindow","exposed","existing","test","unshift","data","values","sort","x","y","Proxy","isArray","tokenRe","nonRegexTerminals","concat","punctuations","reserved","idl","lastCharIndex","nextChar","charAt","attemptTokenMatch","noFlushTrivia","currentTrivia","pop","lastIndex","WebIDLParseError","punctuation","Error","re","exec","tokenise","candidates","mixin","instance","inheritable","allowedMembers","colon","ea","mem","args","member","async","secondTypeRequired","secondTypeAllowed","static_member","every","oldConstructors","constructor","autofixConstructor","namedConstructors","named","constructors","opNames","Set","getOperations","op","partials","mixins","mixinMap","ext","additions","forEachExtension","addition","add","existings","checkInterfaceMemberDuplication","interfaceDef","constructorExtAttr","indentation","memberIndent","parentTrivia","indentCh","getMemberIndentation","constructorOp","existingIndex","array","predicate","reverse","findIndex","findLastIndex","splice","removed","trim","callback","parseByTokens","interface_","opts","definition","res","eof","concrete","definitions","noop","templates","wrap","nameless","extendedAttribute","extendedAttributeReference","write","ast","ts","raw","unescaped","wrapper","reference_token","name_token","type_body","it","ref","extended_attributes","default_","extended_attribute_listitem","make_ext_at","id","endsWith","eats","container","inh","iterate","iterable_like","table","interface","namespace","operation","body","attribute","const","enum","v","iterable","maplike","setlike","things","results","thing","dispatch","getMixinMap","all","Map","include","validateIterable","duplicates","WeakMap","groupDefinitions","dup","checkDuplicatedNames","flat"],"mappings":"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","file":"webidl2.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebIDL2\"] = factory();\n\telse\n\t\troot[\"WebIDL2\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * @param {string} text\n */\nfunction lastLine(text) {\n  const splitted = text.split(\"\\n\");\n  return splitted[splitted.length - 1];\n}\n\n/**\n * @typedef {object} WebIDL2ErrorOptions\n * @property {\"error\" | \"warning\"} [level]\n * @property {Function} [autofix]\n *\n * @param {string} message error message\n * @param {\"Syntax\" | \"Validation\"} kind error type\n * @param {WebIDL2ErrorOptions} [options]\n */\nfunction error(source, position, current, message, kind, { level = \"error\", autofix, ruleName } = {}) {\n  /**\n   * @param {number} count\n   */\n  function sliceTokens(count) {\n    return count > 0 ?\n      source.slice(position, position + count) :\n      source.slice(Math.max(position + count, 0), position);\n  }\n\n  function tokensToText(inputs, { precedes } = {}) {\n    const text = inputs.map(t => t.trivia + t.value).join(\"\");\n    const nextToken = source[position];\n    if (nextToken.type === \"eof\") {\n      return text;\n    }\n    if (precedes) {\n      return text + nextToken.trivia;\n    }\n    return text.slice(nextToken.trivia.length);\n  }\n\n  const maxTokens = 5; // arbitrary but works well enough\n  const line =\n    source[position].type !== \"eof\" ? source[position].line :\n    source.length > 1 ? source[position - 1].line :\n    1;\n\n  const precedingLastLine = lastLine(\n    tokensToText(sliceTokens(-maxTokens), { precedes: true })\n  );\n\n  const subsequentTokens = sliceTokens(maxTokens);\n  const subsequentText = tokensToText(subsequentTokens);\n  const subsequentFirstLine = subsequentText.split(\"\\n\")[0];\n\n  const spaced = \" \".repeat(precedingLastLine.length) + \"^\";\n  const sourceContext = precedingLastLine + subsequentFirstLine + \"\\n\" + spaced;\n\n  const contextType = kind === \"Syntax\" ? \"since\" : \"inside\";\n  const inSourceName = source.name ? ` in ${source.name}` : \"\";\n  const grammaticalContext = (current && current.name) ? `, ${contextType} \\`${current.partial ? \"partial \" : \"\"}${current.type} ${current.name}\\`` : \"\";\n  const context = `${kind} error at line ${line}${inSourceName}${grammaticalContext}:\\n${sourceContext}`;\n  return {\n    message: `${context} ${message}`,\n    bareMessage: message,\n    context,\n    line,\n    sourceName: source.name,\n    level,\n    ruleName,\n    autofix,\n    input: subsequentText,\n    tokens: subsequentTokens\n  };\n}\n\n/**\n * @param {string} message error message\n */\nexport function syntaxError(source, position, current, message) {\n  return error(source, position, current, message, \"Syntax\");\n}\n\n/**\n * @param {string} message error message\n * @param {WebIDL2ErrorOptions} [options]\n */\nexport function validationError(token, current, ruleName, message, options = {}) {\n  options.ruleName = ruleName;\n  return error(current.source, token.index, current, message, \"Validation\", options);\n}\n","// @ts-check\n\nexport class Base {\n  /**\n   * @param {object} initializer\n   * @param {Base[\"source\"]} initializer.source\n   * @param {Base[\"tokens\"]} initializer.tokens\n   */\n  constructor({ source, tokens }) {\n    Object.defineProperties(this, {\n      source: { value: source },\n      tokens: { value: tokens },\n      parent: { value: null, writable: true },\n      this: { value: this } // useful when escaping from proxy\n    });\n  }\n\n  toJSON() {\n    const json = { type: undefined, name: undefined, inheritance: undefined };\n    let proto = this;\n    while (proto !== Object.prototype) {\n      const descMap = Object.getOwnPropertyDescriptors(proto);\n      for (const [key, value] of Object.entries(descMap)) {\n        if (value.enumerable || value.get) {\n          // @ts-ignore - allow indexing here\n          json[key] = this[key];\n        }\n      }\n      proto = Object.getPrototypeOf(proto);\n    }\n    return json;\n  }\n}\n","// @ts-check\n\n/**\n * @typedef {import(\"../productions/dictionary.js\").Dictionary} Dictionary\n *\n * @param {*} idlType\n * @param {import(\"../validator.js\").Definitions} defs\n * @param {object} [options]\n * @param {boolean} [options.useNullableInner] use when the input idlType is nullable and you want to use its inner type\n * @return {{ reference: *, dictionary: Dictionary }} the type reference that ultimately includes dictionary.\n */\nexport function idlTypeIncludesDictionary(idlType, defs, { useNullableInner } = {}) {\n  if (!idlType.union) {\n    const def = defs.unique.get(idlType.idlType);\n    if (!def) {\n      return;\n    }\n    if (def.type === \"typedef\") {\n      const { typedefIncludesDictionary } = defs.cache;\n      if (typedefIncludesDictionary.has(def)) {\n        // Note that this also halts when it met indeterminate state\n        // to prevent infinite recursion\n        return typedefIncludesDictionary.get(def);\n      }\n      defs.cache.typedefIncludesDictionary.set(def, undefined); // indeterminate state\n      const result = idlTypeIncludesDictionary(def.idlType, defs);\n      defs.cache.typedefIncludesDictionary.set(def, result);\n      if (result) {\n        return {\n          reference: idlType,\n          dictionary: result.dictionary\n        };\n      }\n    }\n    if (def.type === \"dictionary\" && (useNullableInner || !idlType.nullable)) {\n      return {\n        reference: idlType,\n        dictionary: def\n      };\n    }\n  }\n  for (const subtype of idlType.subtype) {\n    const result = idlTypeIncludesDictionary(subtype, defs);\n    if (result) {\n      if (subtype.union) {\n        return result;\n      }\n      return {\n        reference: subtype,\n        dictionary: result.dictionary\n      };\n    }\n  }\n}\n\n/**\n * @param {*} dict dictionary type\n * @param {import(\"../validator.js\").Definitions} defs\n * @return {boolean}\n */\nexport function dictionaryIncludesRequiredField(dict, defs) {\n  if (defs.cache.dictionaryIncludesRequiredField.has(dict)) {\n    return defs.cache.dictionaryIncludesRequiredField.get(dict);\n  }\n  defs.cache.dictionaryIncludesRequiredField.set(dict, undefined); // indeterminate\n  if (dict.inheritance) {\n    const superdict = defs.unique.get(dict.inheritance);\n    if (!superdict) {\n      return true;\n    }\n    if (dictionaryIncludesRequiredField(superdict, defs)) {\n      return true;\n    }\n  }\n  const result = dict.members.some(field => field.required);\n  defs.cache.dictionaryIncludesRequiredField.set(dict, result);\n  return result;\n}\n","import { Base } from \"./base.js\";\nimport { unescape, type_with_extended_attributes, return_type, primitive_type, autoParenter } from \"./helpers.js\";\nimport { stringTypes, typeNameKeywords } from \"../tokeniser.js\";\nimport { validationError } from \"../error.js\";\nimport { idlTypeIncludesDictionary } from \"../validators/helpers.js\";\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n * @param {string} typeName\n */\nfunction generic_type(tokeniser, typeName) {\n  const base = tokeniser.consume(\"FrozenArray\", \"Promise\", \"sequence\", \"record\");\n  if (!base) {\n    return;\n  }\n  const ret = autoParenter(new Type({ source: tokeniser.source, tokens: { base } }));\n  ret.tokens.open = tokeniser.consume(\"<\") || tokeniser.error(`No opening bracket after ${base.type}`);\n  switch (base.type) {\n    case \"Promise\": {\n      if (tokeniser.probe(\"[\")) tokeniser.error(\"Promise type cannot have extended attribute\");\n      const subtype = return_type(tokeniser, typeName) || tokeniser.error(\"Missing Promise subtype\");\n      ret.subtype.push(subtype);\n      break;\n    }\n    case \"sequence\":\n    case \"FrozenArray\": {\n      const subtype = type_with_extended_attributes(tokeniser, typeName) || tokeniser.error(`Missing ${base.type} subtype`);\n      ret.subtype.push(subtype);\n      break;\n    }\n    case \"record\": {\n      if (tokeniser.probe(\"[\")) tokeniser.error(\"Record key cannot have extended attribute\");\n      const keyType = tokeniser.consume(...stringTypes) || tokeniser.error(`Record key must be one of: ${stringTypes.join(\", \")}`);\n      const keyIdlType = new Type({ source: tokeniser.source, tokens: { base: keyType }});\n      keyIdlType.tokens.separator = tokeniser.consume(\",\") || tokeniser.error(\"Missing comma after record key type\");\n      keyIdlType.type = typeName;\n      const valueType = type_with_extended_attributes(tokeniser, typeName) || tokeniser.error(\"Error parsing generic type record\");\n      ret.subtype.push(keyIdlType, valueType);\n      break;\n    }\n  }\n  if (!ret.idlType) tokeniser.error(`Error parsing generic type ${base.type}`);\n  ret.tokens.close = tokeniser.consume(\">\") || tokeniser.error(`Missing closing bracket after ${base.type}`);\n  return ret.this;\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n */\nfunction type_suffix(tokeniser, obj) {\n  const nullable = tokeniser.consume(\"?\");\n  if (nullable) {\n    obj.tokens.nullable = nullable;\n  }\n  if (tokeniser.probe(\"?\")) tokeniser.error(\"Can't nullable more than once\");\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n * @param {string} typeName\n */\nfunction single_type(tokeniser, typeName) {\n  let ret = generic_type(tokeniser, typeName) || primitive_type(tokeniser);\n  if (!ret) {\n    const base = tokeniser.consume(\"identifier\", ...stringTypes, ...typeNameKeywords);\n    if (!base) {\n      return;\n    }\n    ret = new Type({ source: tokeniser.source, tokens: { base } });\n    if (tokeniser.probe(\"<\")) tokeniser.error(`Unsupported generic type ${base.value}`);\n  }\n  if (ret.generic === \"Promise\" && tokeniser.probe(\"?\")) {\n    tokeniser.error(\"Promise type cannot be nullable\");\n  }\n  ret.type = typeName || null;\n  type_suffix(tokeniser, ret);\n  if (ret.nullable && ret.idlType === \"any\") tokeniser.error(\"Type `any` cannot be made nullable\");\n  return ret;\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n * @param {string} type\n */\nfunction union_type(tokeniser, type) {\n  const tokens = {};\n  tokens.open = tokeniser.consume(\"(\");\n  if (!tokens.open) return;\n  const ret = autoParenter(new Type({ source: tokeniser.source, tokens }));\n  ret.type = type || null;\n  while (true) {\n    const typ = type_with_extended_attributes(tokeniser) || tokeniser.error(\"No type after open parenthesis or 'or' in union type\");\n    if (typ.idlType === \"any\") tokeniser.error(\"Type `any` cannot be included in a union type\");\n    if (typ.generic === \"Promise\") tokeniser.error(\"Type `Promise` cannot be included in a union type\");\n    ret.subtype.push(typ);\n    const or = tokeniser.consume(\"or\");\n    if (or) {\n      typ.tokens.separator = or;\n    }\n    else break;\n  }\n  if (ret.idlType.length < 2) {\n    tokeniser.error(\"At least two types are expected in a union type but found less\");\n  }\n  tokens.close = tokeniser.consume(\")\") || tokeniser.error(\"Unterminated union type\");\n  type_suffix(tokeniser, ret);\n  return ret.this;\n}\n\nexport class Type extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   * @param {string} typeName\n   */\n  static parse(tokeniser, typeName) {\n    return single_type(tokeniser, typeName) || union_type(tokeniser, typeName);\n  }\n\n  constructor({ source, tokens }) {\n    super({ source, tokens });\n    Object.defineProperty(this, \"subtype\", { value: [], writable: true });\n    this.extAttrs = [];\n  }\n\n  get generic() {\n    if (this.subtype.length && this.tokens.base) {\n      return this.tokens.base.value;\n    }\n    return \"\";\n  }\n  get nullable() {\n    return Boolean(this.tokens.nullable);\n  }\n  get union() {\n    return Boolean(this.subtype.length) && !this.tokens.base;\n  }\n  get idlType() {\n    if (this.subtype.length) {\n      return this.subtype;\n    }\n    // Adding prefixes/postfixes for \"unrestricted float\", etc.\n    const name = [\n      this.tokens.prefix,\n      this.tokens.base,\n      this.tokens.postfix\n    ].filter(t => t).map(t => t.value).join(\" \");\n    return unescape(name);\n  }\n\n  *validate(defs) {\n    /*\n     * If a union is nullable, its subunions cannot include a dictionary\n     * If not, subunions may include dictionaries if each union is not nullable\n     */\n    const typedef = !this.union && defs.unique.get(this.idlType);\n    const target =\n      this.union ? this :\n      (typedef && typedef.type === \"typedef\") ? typedef.idlType :\n      undefined;\n    if (target && this.nullable) {\n      // do not allow any dictionary\n      const { reference } = idlTypeIncludesDictionary(target, defs) || {};\n      if (reference) {\n        const targetToken = (this.union ? reference : this).tokens.base;\n        const message = `Nullable union cannot include a dictionary type`;\n        yield validationError(targetToken, this, \"no-nullable-union-dict\", message);\n      }\n    } else {\n      // allow some dictionary\n      for (const subtype of this.subtype) {\n        yield* subtype.validate(defs);\n      }\n    }\n  }\n}\n","import { Base } from \"./base.js\";\nimport { const_data, const_value } from \"./helpers.js\";\n\nexport class Default extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const assign = tokeniser.consume(\"=\");\n    if (!assign) {\n      return null;\n    }\n    const def = const_value(tokeniser) || tokeniser.consume(\"string\", \"null\", \"[\", \"{\") || tokeniser.error(\"No value for default\");\n    const expression = [def];\n    if (def.type === \"[\") {\n      const close = tokeniser.consume(\"]\") || tokeniser.error(\"Default sequence value must be empty\");\n      expression.push(close);\n    } else if (def.type === \"{\") {\n      const close = tokeniser.consume(\"}\") || tokeniser.error(\"Default dictionary value must be empty\");\n      expression.push(close);\n    }\n    return new Default({ source: tokeniser.source, tokens: { assign }, expression });\n  }\n\n  constructor({ source, tokens, expression }) {\n    super({ source, tokens });\n    expression.parent = this;\n    Object.defineProperty(this, \"expression\", { value: expression });\n  }\n\n  get type() {\n    return const_data(this.expression[0]).type;\n  }\n  get value() {\n    return const_data(this.expression[0]).value;\n  }\n  get negative() {\n    return const_data(this.expression[0]).negative;\n  }\n}\n","// @ts-check\n\nexport class ArrayBase extends Array {\n  constructor({ source, tokens }) {\n    super();\n    Object.defineProperties(this, {\n      source: { value: source },\n      tokens: { value: tokens },\n      parent: { value: null, writable: true }\n    });\n  }\n}\n","// @ts-check\n\nimport { Base } from \"./base.js\";\nimport { unescape } from \"./helpers.js\";\n\nexport class Token extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   * @param {string} type\n   */\n  static parser(tokeniser, type) {\n    return () => {\n      const value = tokeniser.consume(type);\n      if (value) {\n        return new Token({ source: tokeniser.source, tokens: { value } });\n      }\n    };\n  }\n\n  get value() {\n    return unescape(this.tokens.value.value);\n  }\n}\n","import { Base } from \"./base.js\";\nimport { ArrayBase } from \"./array-base.js\";\nimport { Token } from \"./token.js\";\nimport { list, argument_list, autoParenter, unescape } from \"./helpers.js\";\nimport { validationError } from \"../error.js\";\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n * @param {string} tokenName\n */\nfunction tokens(tokeniser, tokenName) {\n  return list(tokeniser, {\n    parser: Token.parser(tokeniser, tokenName),\n    listName: tokenName + \" list\"\n  });\n}\n\nconst extAttrValueSyntax = [\"identifier\", \"decimal\", \"integer\", \"string\"];\n\n/**\n * This will allow a set of extended attribute values to be parsed.\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n */\nfunction extAttrListItems(tokeniser) {\n  for (const syntax of extAttrValueSyntax) {\n    const toks = tokens(tokeniser, syntax);\n    if (toks.length) {\n      return toks;\n    }\n  }\n  tokeniser.error(`Expected identifiers, strings, decimals, or integers but none found`);\n}\n\n\nclass ExtendedAttributeParameters extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const tokens = { assign: tokeniser.consume(\"=\") };\n    const ret = autoParenter(new ExtendedAttributeParameters({ source: tokeniser.source, tokens }));\n    if (tokens.assign) {\n      tokens.secondaryName = tokeniser.consume(...extAttrValueSyntax);\n    }\n    tokens.open = tokeniser.consume(\"(\");\n    if (tokens.open) {\n      ret.list = ret.rhsIsList ?\n        // [Exposed=(Window,Worker)]\n        extAttrListItems(tokeniser) :\n        // [NamedConstructor=Audio(DOMString src)] or [Constructor(DOMString str)]\n        argument_list(tokeniser);\n      tokens.close = tokeniser.consume(\")\") || tokeniser.error(\"Unexpected token in extended attribute argument list\");\n    } else if (ret.hasRhs && !tokens.secondaryName) {\n      tokeniser.error(\"No right hand side to extended attribute assignment\");\n    }\n    return ret.this;\n  }\n\n  get rhsIsList() {\n    return this.tokens.assign && !this.tokens.secondaryName;\n  }\n\n  get rhsType() {\n    if (this.rhsIsList) {\n      return this.list[0].tokens.value.type + \"-list\";\n    }\n    if (this.tokens.secondaryName) {\n      return this.tokens.secondaryName.type;\n    }\n    return null;\n  }\n}\n\nexport class SimpleExtendedAttribute extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const name = tokeniser.consume(\"identifier\");\n    if (name) {\n      return new SimpleExtendedAttribute({\n        source: tokeniser.source,\n        tokens: { name },\n        params: ExtendedAttributeParameters.parse(tokeniser)\n      });\n    }\n  }\n\n  constructor({ source, tokens, params }) {\n    super({ source, tokens });\n    params.parent = this;\n    Object.defineProperty(this, \"params\", { value: params });\n  }\n\n  get type() {\n    return \"extended-attribute\";\n  }\n  get name() {\n    return this.tokens.name.value;\n  }\n  get rhs() {\n    const { rhsType: type, tokens, list } = this.params;\n    if (!type) {\n      return null;\n    }\n    const value = this.params.rhsIsList ? list : unescape(tokens.secondaryName.value);\n    return { type, value };\n  }\n  get arguments() {\n    const { rhsIsList, list } = this.params;\n    if (!list || rhsIsList) {\n      return [];\n    }\n    return list;\n  }\n\n  *validate(defs) {\n    if (this.name === \"NoInterfaceObject\") {\n      const message = `\\`[NoInterfaceObject]\\` extended attribute is an \\\nundesirable feature that may be removed from Web IDL in the future. Refer to the \\\n[relevant upstream PR](https://github.com/heycam/webidl/pull/609) for more \\\ninformation.`;\n      yield validationError(this.tokens.name, this, \"no-nointerfaceobject\", message, { level: \"warning\" });\n    }\n    for (const arg of this.arguments) {\n      yield* arg.validate(defs);\n    }\n  }\n}\n\n// Note: we parse something simpler than the official syntax. It's all that ever\n// seems to be used\nexport class ExtendedAttributes extends ArrayBase {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const tokens = {};\n    tokens.open = tokeniser.consume(\"[\");\n    if (!tokens.open) return new ExtendedAttributes({});\n    const ret = new ExtendedAttributes({ source: tokeniser.source, tokens });\n    ret.push(...list(tokeniser, {\n      parser: SimpleExtendedAttribute.parse,\n      listName: \"extended attribute\"\n    }));\n    tokens.close = tokeniser.consume(\"]\") || tokeniser.error(\"Unexpected closing token of extended attribute\");\n    if (!ret.length) {\n      tokeniser.error(\"Found an empty extended attribute\");\n    }\n    if (tokeniser.probe(\"[\")) {\n      tokeniser.error(\"Illegal double extended attribute lists, consider merging them\");\n    }\n    return ret;\n  }\n\n  *validate(defs) {\n    for (const extAttr of this) {\n      yield* extAttr.validate(defs);\n    }\n  }\n}\n","// @ts-check\n\nimport { Base } from \"./base.js\";\nimport { Default } from \"./default.js\";\nimport { ExtendedAttributes } from \"./extended-attributes.js\";\nimport { unescape, type_with_extended_attributes, autoParenter, getFirstToken } from \"./helpers.js\";\nimport { argumentNameKeywords, Tokeniser } from \"../tokeniser.js\";\nimport { validationError } from \"../error.js\";\nimport { idlTypeIncludesDictionary, dictionaryIncludesRequiredField } from \"../validators/helpers.js\";\n\nexport class Argument extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const start_position = tokeniser.position;\n    /** @type {Base[\"tokens\"]} */\n    const tokens = {};\n    const ret = autoParenter(new Argument({ source: tokeniser.source, tokens }));\n    ret.extAttrs = ExtendedAttributes.parse(tokeniser);\n    tokens.optional = tokeniser.consume(\"optional\");\n    ret.idlType = type_with_extended_attributes(tokeniser, \"argument-type\");\n    if (!ret.idlType) {\n      return tokeniser.unconsume(start_position);\n    }\n    if (!tokens.optional) {\n      tokens.variadic = tokeniser.consume(\"...\");\n    }\n    tokens.name = tokeniser.consume(\"identifier\", ...argumentNameKeywords);\n    if (!tokens.name) {\n      return tokeniser.unconsume(start_position);\n    }\n    ret.default = tokens.optional ? Default.parse(tokeniser) : null;\n    return ret.this;\n  }\n\n  get type() {\n    return \"argument\";\n  }\n  get optional() {\n    return !!this.tokens.optional;\n  }\n  get variadic() {\n    return !!this.tokens.variadic;\n  }\n  get name() {\n    return unescape(this.tokens.name.value);\n  }\n\n  /**\n   * @param {import(\"../validator.js\").Definitions} defs\n   */\n  *validate(defs) {\n    yield* this.idlType.validate(defs);\n    const result = idlTypeIncludesDictionary(this.idlType, defs, { useNullableInner: true });\n    if (result) {\n      if (this.idlType.nullable) {\n        const message = `Dictionary arguments cannot be nullable.`;\n        yield validationError(this.tokens.name, this, \"no-nullable-dict-arg\", message);\n      } else if (!this.optional) {\n        if (this.parent && !dictionaryIncludesRequiredField(result.dictionary, defs) && isLastRequiredArgument(this)) {\n          const message = `Dictionary argument must be optional if it has no required fields`;\n          yield validationError(this.tokens.name, this, \"dict-arg-optional\", message, {\n            autofix: autofixDictionaryArgumentOptionality(this)\n          });\n        }\n      } else if (!this.default) {\n        const message = `Optional dictionary arguments must have a default value of \\`{}\\`.`;\n        yield validationError(this.tokens.name, this, \"dict-arg-default\", message, {\n          autofix: autofixOptionalDictionaryDefaultValue(this)\n        });\n      }\n    }\n  }\n}\n\n/**\n * @param {Argument} arg\n */\nfunction isLastRequiredArgument(arg) {\n  const list = arg.parent.arguments || arg.parent.list;\n  const index = list.indexOf(arg);\n  const requiredExists = list.slice(index + 1).some(a => !a.optional);\n  return !requiredExists;\n}\n\n/**\n * @param {Argument} arg\n */\nfunction autofixDictionaryArgumentOptionality(arg) {\n  return () => {\n    const firstToken = getFirstToken(arg.idlType);\n    arg.tokens.optional = { type: \"optional\", value: \"optional\", trivia: firstToken.trivia };\n    firstToken.trivia = \" \";\n    autofixOptionalDictionaryDefaultValue(arg)();\n  };\n}\n\n/**\n * @param {Argument} arg\n */\nfunction autofixOptionalDictionaryDefaultValue(arg) {\n  return () => {\n    arg.default = Default.parse(new Tokeniser(\" = {}\"));\n  };\n}\n","import { Base } from \"./base.js\";\nimport { return_type, argument_list, unescape, autoParenter } from \"./helpers.js\";\nimport { validationError } from \"../error.js\";\n\nexport class Operation extends Base {\n  /**\n   * @typedef {import(\"../tokeniser.js\").Token} Token\n   *\n   * @param {import(\"../tokeniser.js\").Tokeniser} tokeniser\n   * @param {object} [options]\n   * @param {Token} [options.special]\n   * @param {Token} [options.regular]\n   */\n  static parse(tokeniser, { special, regular } = {}) {\n    const tokens = { special };\n    const ret = autoParenter(new Operation({ source: tokeniser.source, tokens }));\n    if (special && special.value === \"stringifier\") {\n      tokens.termination = tokeniser.consume(\";\");\n      if (tokens.termination) {\n        ret.arguments = [];\n        return ret;\n      }\n    }\n    if (!special && !regular) {\n      tokens.special = tokeniser.consume(\"getter\", \"setter\", \"deleter\");\n    }\n    ret.idlType = return_type(tokeniser) || tokeniser.error(\"Missing return type\");\n    tokens.name = tokeniser.consume(\"identifier\", \"includes\");\n    tokens.open = tokeniser.consume(\"(\") || tokeniser.error(\"Invalid operation\");\n    ret.arguments = argument_list(tokeniser);\n    tokens.close = tokeniser.consume(\")\") || tokeniser.error(\"Unterminated operation\");\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"Unterminated operation, expected `;`\");\n    return ret.this;\n  }\n\n  get type() {\n    return \"operation\";\n  }\n  get name() {\n    const { name } = this.tokens;\n    if (!name) {\n      return \"\";\n    }\n    return unescape(name.value);\n  }\n  get special() {\n    if (!this.tokens.special) {\n      return \"\";\n    }\n    return this.tokens.special.value;\n  }\n\n  *validate(defs) {\n    if (!this.name && [\"\", \"static\"].includes(this.special)) {\n      const message = `Regular or static operations must have both a return type and an identifier.`;\n      yield validationError(this.tokens.open, this, \"incomplete-op\", message);\n    }\n    if (this.idlType) {\n      yield* this.idlType.validate(defs);\n    }\n    for (const argument of this.arguments) {\n      yield* argument.validate(defs);\n    }\n  }\n}\n","import { Base } from \"./base.js\";\nimport { type_with_extended_attributes, unescape, autoParenter } from \"./helpers.js\";\n\nexport class Attribute extends Base {\n  /**\n   * @param {import(\"../tokeniser.js\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser, { special, noInherit = false, readonly = false } = {}) {\n    const start_position = tokeniser.position;\n    const tokens = { special };\n    const ret = autoParenter(new Attribute({ source: tokeniser.source, tokens }));\n    if (!special && !noInherit) {\n      tokens.special = tokeniser.consume(\"inherit\");\n    }\n    if (ret.special === \"inherit\" && tokeniser.probe(\"readonly\")) {\n      tokeniser.error(\"Inherited attributes cannot be read-only\");\n    }\n    tokens.readonly = tokeniser.consume(\"readonly\");\n    if (readonly && !tokens.readonly && tokeniser.probe(\"attribute\")) {\n      tokeniser.error(\"Attributes must be readonly in this context\");\n    }\n    tokens.base = tokeniser.consume(\"attribute\");\n    if (!tokens.base) {\n      tokeniser.unconsume(start_position);\n      return;\n    }\n    ret.idlType = type_with_extended_attributes(tokeniser, \"attribute-type\") || tokeniser.error(\"Attribute lacks a type\");\n    switch (ret.idlType.generic) {\n      case \"sequence\":\n      case \"record\": tokeniser.error(`Attributes cannot accept ${ret.idlType.generic} types`);\n    }\n    tokens.name = tokeniser.consume(\"identifier\", \"async\", \"required\") || tokeniser.error(\"Attribute lacks a name\");\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"Unterminated attribute, expected `;`\");\n    return ret.this;\n  }\n\n  get type() {\n    return \"attribute\";\n  }\n  get special() {\n    if (!this.tokens.special) {\n      return \"\";\n    }\n    return this.tokens.special.value;\n  }\n  get readonly() {\n    return !!this.tokens.readonly;\n  }\n  get name() {\n    return unescape(this.tokens.name.value);\n  }\n\n  *validate(defs) {\n    yield* this.idlType.validate(defs);\n  }\n}\n","import { Type } from \"./type.js\";\nimport { Argument } from \"./argument.js\";\nimport { ExtendedAttributes, SimpleExtendedAttribute } from \"./extended-attributes.js\";\nimport { Operation } from \"./operation.js\";\nimport { Attribute } from \"./attribute.js\";\nimport { Tokeniser } from \"../tokeniser.js\";\n\n/**\n * @param {string} identifier\n */\nexport function unescape(identifier) {\n  return identifier.startsWith('_') ? identifier.slice(1) : identifier;\n}\n\n/**\n * Parses comma-separated list\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n * @param {object} args\n * @param {Function} args.parser parser function for each item\n * @param {boolean} [args.allowDangler] whether to allow dangling comma\n * @param {string} [args.listName] the name to be shown on error messages\n */\nexport function list(tokeniser, { parser, allowDangler, listName = \"list\" }) {\n  const first = parser(tokeniser);\n  if (!first) {\n    return [];\n  }\n  first.tokens.separator = tokeniser.consume(\",\");\n  const items = [first];\n  while (first.tokens.separator) {\n    const item = parser(tokeniser);\n    if (!item) {\n      if (!allowDangler) {\n        tokeniser.error(`Trailing comma in ${listName}`);\n      }\n      break;\n    }\n    item.tokens.separator = tokeniser.consume(\",\");\n    items.push(item);\n    if (!item.tokens.separator) break;\n  }\n  return items;\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n */\nexport function const_value(tokeniser) {\n  return tokeniser.consume(\"true\", \"false\", \"Infinity\", \"-Infinity\", \"NaN\", \"decimal\", \"integer\");\n}\n\n/**\n * @param {object} token\n * @param {string} token.type\n * @param {string} token.value\n */\nexport function const_data({ type, value }) {\n  switch (type) {\n    case \"true\":\n    case \"false\":\n      return { type: \"boolean\", value: type === \"true\" };\n    case \"Infinity\":\n    case \"-Infinity\":\n      return { type: \"Infinity\", negative: type.startsWith(\"-\") };\n    case \"[\":\n      return { type: \"sequence\", value: [] };\n    case \"{\":\n      return { type: \"dictionary\" };\n    case \"decimal\":\n    case \"integer\":\n      return { type: \"number\", value };\n    case \"string\":\n      return { type: \"string\", value: value.slice(1, -1) };\n    default:\n      return { type };\n  }\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n */\nexport function primitive_type(tokeniser) {\n  function integer_type() {\n    const prefix = tokeniser.consume(\"unsigned\");\n    const base = tokeniser.consume(\"short\", \"long\");\n    if (base) {\n      const postfix = tokeniser.consume(\"long\");\n      return new Type({ source, tokens: { prefix, base, postfix } });\n    }\n    if (prefix) tokeniser.error(\"Failed to parse integer type\");\n  }\n\n  function decimal_type() {\n    const prefix = tokeniser.consume(\"unrestricted\");\n    const base = tokeniser.consume(\"float\", \"double\");\n    if (base) {\n      return new Type({ source, tokens: { prefix, base } });\n    }\n    if (prefix) tokeniser.error(\"Failed to parse float type\");\n  }\n\n  const { source } = tokeniser;\n  const num_type = integer_type(tokeniser) || decimal_type(tokeniser);\n  if (num_type) return num_type;\n  const base = tokeniser.consume(\"boolean\", \"byte\", \"octet\");\n  if (base) {\n    return new Type({ source, tokens: { base } });\n  }\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n */\nexport function argument_list(tokeniser) {\n  return list(tokeniser, { parser: Argument.parse, listName: \"arguments list\" });\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n * @param {string} typeName\n */\nexport function type_with_extended_attributes(tokeniser, typeName) {\n  const extAttrs = ExtendedAttributes.parse(tokeniser);\n  const ret = Type.parse(tokeniser, typeName);\n  if (ret) autoParenter(ret).extAttrs = extAttrs;\n  return ret;\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n * @param {string} typeName\n */\nexport function return_type(tokeniser, typeName) {\n  const typ = Type.parse(tokeniser, typeName || \"return-type\");\n  if (typ) {\n    return typ;\n  }\n  const voidToken = tokeniser.consume(\"void\");\n  if (voidToken) {\n    const ret = new Type({ source: tokeniser.source, tokens: { base: voidToken } });\n    ret.type = \"return-type\";\n    return ret;\n  }\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n */\nexport function stringifier(tokeniser) {\n  const special = tokeniser.consume(\"stringifier\");\n  if (!special) return;\n  const member = Attribute.parse(tokeniser, { special }) ||\n    Operation.parse(tokeniser, { special }) ||\n    tokeniser.error(\"Unterminated stringifier\");\n  return member;\n}\n\n/**\n * @param {string} str\n */\nexport function getLastIndentation(str) {\n  const lines = str.split(\"\\n\");\n  // the first line visually binds to the preceding token\n  if (lines.length) {\n    const match = lines[lines.length - 1].match(/^\\s+/);\n    if (match) {\n      return match[0];\n    }\n  }\n  return \"\";\n}\n\n/**\n * @param {string} parentTrivia\n */\nexport function getMemberIndentation(parentTrivia) {\n  const indentation = getLastIndentation(parentTrivia);\n  const indentCh = indentation.includes(\"\\t\") ? \"\\t\" : \"  \";\n  return indentation + indentCh;\n}\n\n/**\n * @param {object} def\n * @param {import(\"./extended-attributes.js\").ExtendedAttributes} def.extAttrs\n */\nexport function autofixAddExposedWindow(def) {\n  return () => {\n    if (def.extAttrs.length){\n      const tokeniser = new Tokeniser(\"Exposed=Window,\");\n      const exposed = SimpleExtendedAttribute.parse(tokeniser);\n      exposed.tokens.separator = tokeniser.consume(\",\");\n      const existing = def.extAttrs[0];\n      if (!/^\\s/.test(existing.tokens.name.trivia)) {\n        existing.tokens.name.trivia = ` ${existing.tokens.name.trivia}`;\n      }\n      def.extAttrs.unshift(exposed);\n    } else {\n      autoParenter(def).extAttrs = ExtendedAttributes.parse(new Tokeniser(\"[Exposed=Window]\"));\n      const trivia = def.tokens.base.trivia;\n      def.extAttrs.tokens.open.trivia = trivia;\n      def.tokens.base.trivia = `\\n${getLastIndentation(trivia)}`;\n    }\n  };\n}\n\n/**\n * Get the first syntax token for the given IDL object.\n * @param {*} data\n */\nexport function getFirstToken(data) {\n  if (data.extAttrs.length) {\n    return data.extAttrs.tokens.open;\n  }\n  if (data.type === \"operation\" && !data.special) {\n    return getFirstToken(data.idlType);\n  }\n  const tokens = Object.values(data.tokens).sort((x, y) => x.index - y.index);\n  return tokens[0];\n}\n\n/**\n * @template T\n * @param {T[]} array\n * @param {(item: T) => boolean} predicate\n */\nexport function findLastIndex(array, predicate) {\n  const index = array.slice().reverse().findIndex(predicate);\n  if (index === -1) {\n    return index;\n  }\n  return array.length - index - 1;\n}\n\n/**\n * Returns a proxy that auto-assign `parent` field.\n * @template T\n * @param {T} data\n * @param {*} [parent] The object that will be assigned to `parent`.\n *                     If absent, it will be `data` by default.\n * @return {T}\n */\nexport function autoParenter(data, parent) {\n  if (!parent) {\n    // Defaults to `data` unless specified otherwise.\n    parent = data;\n  }\n  if (!data) {\n    // This allows `autoParenter(undefined)` which again allows\n    // `autoParenter(parse())` where the function may return nothing.\n    return data;\n  }\n  return new Proxy(data, {\n    get(target, p) {\n      const value = target[p];\n      if (Array.isArray(value)) {\n        // Wraps the array so that any added items will also automatically\n        // get their `parent` values.\n        return autoParenter(value, target);\n      }\n      return value;\n    },\n    set(target, p, value) {\n      target[p] = value;\n      if (!value) {\n        return true;\n      } else if (Array.isArray(value)) {\n        // Assigning an array will add `parent` to its items.\n        for (const item of value) {\n          if (typeof item.parent !== \"undefined\") {\n            item.parent = parent;\n          }\n        }\n      } else if (typeof value.parent !== \"undefined\") {\n        value.parent = parent;\n      }\n      return true;\n    }\n  });\n}\n","import { syntaxError } from \"./error.js\";\nimport { unescape } from \"./productions/helpers.js\";\n\n// These regular expressions use the sticky flag so they will only match at\n// the current location (ie. the offset of lastIndex).\nconst tokenRe = {\n  // This expression uses a lookahead assertion to catch false matches\n  // against integers early.\n  \"decimal\": /-?(?=[0-9]*\\.|[0-9]+[eE])(([0-9]+\\.[0-9]*|[0-9]*\\.[0-9]+)([Ee][-+]?[0-9]+)?|[0-9]+[Ee][-+]?[0-9]+)/y,\n  \"integer\": /-?(0([Xx][0-9A-Fa-f]+|[0-7]*)|[1-9][0-9]*)/y,\n  \"identifier\": /[_-]?[A-Za-z][0-9A-Z_a-z-]*/y,\n  \"string\": /\"[^\"]*\"/y,\n  \"whitespace\": /[\\t\\n\\r ]+/y,\n  \"comment\": /((\\/(\\/.*|\\*([^*]|\\*[^/])*\\*\\/)[\\t\\n\\r ]*)+)/y,\n  \"other\": /[^\\t\\n\\r 0-9A-Za-z]/y\n};\n\nexport const typeNameKeywords = [\n  \"ArrayBuffer\",\n  \"DataView\",\n  \"Int8Array\",\n  \"Int16Array\",\n  \"Int32Array\",\n  \"Uint8Array\",\n  \"Uint16Array\",\n  \"Uint32Array\",\n  \"Uint8ClampedArray\",\n  \"Float32Array\",\n  \"Float64Array\",\n  \"any\",\n  \"object\",\n  \"symbol\"\n];\n\nexport const stringTypes = [\n  \"ByteString\",\n  \"DOMString\",\n  \"USVString\"\n];\n\nexport const argumentNameKeywords = [\n  \"async\",\n  \"attribute\",\n  \"callback\",\n  \"const\",\n  \"constructor\",\n  \"deleter\",\n  \"dictionary\",\n  \"enum\",\n  \"getter\",\n  \"includes\",\n  \"inherit\",\n  \"interface\",\n  \"iterable\",\n  \"maplike\",\n  \"namespace\",\n  \"partial\",\n  \"required\",\n  \"setlike\",\n  \"setter\",\n  \"static\",\n  \"stringifier\",\n  \"typedef\",\n  \"unrestricted\"\n];\n\nconst nonRegexTerminals = [\n  \"-Infinity\",\n  \"FrozenArray\",\n  \"Infinity\",\n  \"NaN\",\n  \"Promise\",\n  \"boolean\",\n  \"byte\",\n  \"double\",\n  \"false\",\n  \"float\",\n  \"long\",\n  \"mixin\",\n  \"null\",\n  \"octet\",\n  \"optional\",\n  \"or\",\n  \"readonly\",\n  \"record\",\n  \"sequence\",\n  \"short\",\n  \"true\",\n  \"unsigned\",\n  \"void\"\n].concat(argumentNameKeywords, stringTypes, typeNameKeywords);\n\nconst punctuations = [\n  \"(\",\n  \")\",\n  \",\",\n  \"...\",\n  \":\",\n  \";\",\n  \"<\",\n  \"=\",\n  \">\",\n  \"?\",\n  \"[\",\n  \"]\",\n  \"{\",\n  \"}\"\n];\n\nconst reserved = [\n  // \"constructor\" is now a keyword\n  \"_constructor\",\n  \"toString\",\n  \"_toString\",\n];\n\n/**\n * @typedef {ArrayItemType<ReturnType<typeof tokenise>>} Token\n * @param {string} str\n */\nfunction tokenise(str) {\n  const tokens = [];\n  let lastCharIndex = 0;\n  let trivia = \"\";\n  let line = 1;\n  let index = 0;\n  while (lastCharIndex < str.length) {\n    const nextChar = str.charAt(lastCharIndex);\n    let result = -1;\n\n    if (/[\\t\\n\\r ]/.test(nextChar)) {\n      result = attemptTokenMatch(\"whitespace\", { noFlushTrivia: true });\n    } else if (nextChar === '/') {\n      result = attemptTokenMatch(\"comment\", { noFlushTrivia: true });\n    }\n\n    if (result !== -1) {\n      const currentTrivia = tokens.pop().value;\n      line += (currentTrivia.match(/\\n/g) || []).length;\n      trivia += currentTrivia;\n      index -= 1;\n    } else if (/[-0-9.A-Z_a-z]/.test(nextChar)) {\n      result = attemptTokenMatch(\"decimal\");\n      if (result === -1) {\n        result = attemptTokenMatch(\"integer\");\n      }\n      if (result === -1) {\n        result = attemptTokenMatch(\"identifier\");\n        const lastIndex = tokens.length - 1;\n        const token = tokens[lastIndex];\n        if (result !== -1) {\n          if (reserved.includes(token.value)) {\n            const message = `${unescape(token.value)} is a reserved identifier and must not be used.`;\n            throw new WebIDLParseError(syntaxError(tokens, lastIndex, null, message));\n          } else if (nonRegexTerminals.includes(token.value)) {\n            token.type = token.value;\n          }\n        }\n      }\n    } else if (nextChar === '\"') {\n      result = attemptTokenMatch(\"string\");\n    }\n\n    for (const punctuation of punctuations) {\n      if (str.startsWith(punctuation, lastCharIndex)) {\n        tokens.push({ type: punctuation, value: punctuation, trivia, line, index });\n        trivia = \"\";\n        lastCharIndex += punctuation.length;\n        result = lastCharIndex;\n        break;\n      }\n    }\n\n    // other as the last try\n    if (result === -1) {\n      result = attemptTokenMatch(\"other\");\n    }\n    if (result === -1) {\n      throw new Error(\"Token stream not progressing\");\n    }\n    lastCharIndex = result;\n    index += 1;\n  }\n\n  // remaining trivia as eof\n  tokens.push({\n    type: \"eof\",\n    value: \"\",\n    trivia\n  });\n\n  return tokens;\n\n  /**\n   * @param {keyof typeof tokenRe} type\n   * @param {object} options\n   * @param {boolean} [options.noFlushTrivia]\n   */\n  function attemptTokenMatch(type, { noFlushTrivia } = {}) {\n    const re = tokenRe[type];\n    re.lastIndex = lastCharIndex;\n    const result = re.exec(str);\n    if (result) {\n      tokens.push({ type, value: result[0], trivia, line, index });\n      if (!noFlushTrivia) {\n        trivia = \"\";\n      }\n      return re.lastIndex;\n    }\n    return -1;\n  }\n}\n\nexport class Tokeniser {\n  /**\n   * @param {string} idl\n   */\n  constructor(idl) {\n    this.source = tokenise(idl);\n    this.position = 0;\n  }\n\n  /**\n   * @param {string} message\n   * @return {never}\n   */\n  error(message) {\n    throw new WebIDLParseError(syntaxError(this.source, this.position, this.current, message));\n  }\n\n  /**\n   * @param {string} type\n   */\n  probe(type) {\n    return this.source.length > this.position && this.source[this.position].type === type;\n  }\n\n  /**\n   * @param  {...string} candidates\n   */\n  consume(...candidates) {\n    for (const type of candidates) {\n      if (!this.probe(type)) continue;\n      const token = this.source[this.position];\n      this.position++;\n      return token;\n    }\n  }\n\n  /**\n   * @param {number} position\n   */\n  unconsume(position) {\n    this.position = position;\n  }\n}\n\nexport class WebIDLParseError extends Error {\n  /**\n   * @param {object} options\n   * @param {string} options.message\n   * @param {string} options.bareMessage\n   * @param {string} options.context\n   * @param {number} options.line\n   * @param {*} options.sourceName\n   * @param {string} options.input\n   * @param {*[]} options.tokens\n   */\n  constructor({ message, bareMessage, context, line, sourceName, input, tokens }) {\n    super(message);\n\n    this.name = \"WebIDLParseError\"; // not to be mangled\n    this.bareMessage = bareMessage;\n    this.context = context;\n    this.line = line;\n    this.sourceName = sourceName;\n    this.input = input;\n    this.tokens = tokens;\n  }\n}\n","import { list, unescape, autoParenter } from \"./helpers.js\";\nimport { Token } from \"./token.js\";\nimport { Base } from \"./base.js\";\n\nclass EnumValue extends Token {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const value = tokeniser.consume(\"string\");\n    if (value) {\n      return new EnumValue({ source: tokeniser.source, tokens: { value } });\n    }\n  }\n\n  get type() {\n    return \"enum-value\";\n  }\n  get value() {\n    return super.value.slice(1, -1);\n  }\n}\n\nexport class Enum extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    /** @type {Base[\"tokens\"]} */\n    const tokens = {};\n    tokens.base = tokeniser.consume(\"enum\");\n    if (!tokens.base) {\n      return;\n    }\n    tokens.name = tokeniser.consume(\"identifier\") || tokeniser.error(\"No name for enum\");\n    const ret = autoParenter(new Enum({ source: tokeniser.source, tokens }));\n    tokeniser.current = ret.this;\n    tokens.open = tokeniser.consume(\"{\") || tokeniser.error(\"Bodyless enum\");\n    ret.values = list(tokeniser, {\n      parser: EnumValue.parse,\n      allowDangler: true,\n      listName: \"enumeration\"\n    });\n    if (tokeniser.probe(\"string\")) {\n      tokeniser.error(\"No comma between enum values\");\n    }\n    tokens.close = tokeniser.consume(\"}\") || tokeniser.error(\"Unexpected value in enum\");\n    if (!ret.values.length) {\n      tokeniser.error(\"No value in enum\");\n    }\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"No semicolon after enum\");\n    return ret.this;\n  }\n\n  get type() {\n    return \"enum\";\n  }\n  get name() {\n    return unescape(this.tokens.name.value);\n  }\n}\n","// @ts-check\n\nimport { Base } from \"./base.js\";\nimport { unescape } from \"./helpers.js\";\n\nexport class Includes extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const target = tokeniser.consume(\"identifier\");\n    if (!target) {\n      return;\n    }\n    const tokens = { target };\n    tokens.includes = tokeniser.consume(\"includes\");\n    if (!tokens.includes) {\n      tokeniser.unconsume(target.index);\n      return;\n    }\n    tokens.mixin = tokeniser.consume(\"identifier\") || tokeniser.error(\"Incomplete includes statement\");\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"No terminating ; for includes statement\");\n    return new Includes({ source: tokeniser.source, tokens });\n  }\n\n  get type() {\n    return \"includes\";\n  }\n  get target() {\n    return unescape(this.tokens.target.value);\n  }\n  get includes() {\n    return unescape(this.tokens.mixin.value);\n  }\n}\n","import { Base } from \"./base.js\";\nimport { type_with_extended_attributes, unescape, autoParenter } from \"./helpers.js\";\n\nexport class Typedef extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    /** @type {Base[\"tokens\"]} */\n    const tokens = {};\n    const ret = autoParenter(new Typedef({ source: tokeniser.source, tokens }));\n    tokens.base = tokeniser.consume(\"typedef\");\n    if (!tokens.base) {\n      return;\n    }\n    ret.idlType = type_with_extended_attributes(tokeniser, \"typedef-type\") || tokeniser.error(\"Typedef lacks a type\");\n    tokens.name = tokeniser.consume(\"identifier\") || tokeniser.error(\"Typedef lacks a name\");\n    tokeniser.current = ret.this;\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"Unterminated typedef, expected `;`\");\n    return ret.this;\n  }\n\n  get type() {\n    return \"typedef\";\n  }\n  get name() {\n    return unescape(this.tokens.name.value);\n  }\n\n  *validate(defs) {\n    yield* this.idlType.validate(defs);\n  }\n}\n","import { Base } from \"./base.js\";\nimport { return_type, argument_list, unescape, autoParenter } from \"./helpers.js\";\n\nexport class CallbackFunction extends Base {\n  /**\n   * @param {import(\"../tokeniser.js\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser, base) {\n    const tokens = { base };\n    const ret = autoParenter(new CallbackFunction({ source: tokeniser.source, tokens }));\n    tokens.name = tokeniser.consume(\"identifier\") || tokeniser.error(\"Callback lacks a name\");\n    tokeniser.current = ret.this;\n    tokens.assign = tokeniser.consume(\"=\") || tokeniser.error(\"Callback lacks an assignment\");\n    ret.idlType = return_type(tokeniser) || tokeniser.error(\"Callback lacks a return type\");\n    tokens.open = tokeniser.consume(\"(\") || tokeniser.error(\"Callback lacks parentheses for arguments\");\n    ret.arguments = argument_list(tokeniser);\n    tokens.close = tokeniser.consume(\")\") || tokeniser.error(\"Unterminated callback\");\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"Unterminated callback, expected `;`\");\n    return ret.this;\n  }\n\n  get type() {\n    return \"callback\";\n  }\n  get name() {\n    return unescape(this.tokens.name.value);\n  }\n\n  *validate(defs) {\n    yield* this.idlType.validate(defs);\n  }\n}\n","import { Base } from \"./base.js\";\nimport { ExtendedAttributes } from \"./extended-attributes.js\";\nimport { unescape, autoParenter } from \"./helpers.js\";\n\n/**\n * @param {import(\"../tokeniser.js\").Tokeniser} tokeniser\n */\nfunction inheritance(tokeniser) {\n  const colon = tokeniser.consume(\":\");\n  if (!colon) {\n    return {};\n  }\n  const inheritance = tokeniser.consume(\"identifier\") || tokeniser.error(\"Inheritance lacks a type\");\n  return { colon, inheritance };\n}\n\nexport class Container extends Base {\n    /**\n     * @template T\n     * @param {import(\"../tokeniser.js\").Tokeniser} tokeniser\n     * @param {T} instance\n     * @param {*} args\n     */\n    static parse(tokeniser, instance, { type, inheritable, allowedMembers }) {\n      const { tokens } = instance;\n      tokens.name = tokeniser.consume(\"identifier\") || tokeniser.error(`Missing name in ${instance.type}`);\n      tokeniser.current = instance;\n      instance = autoParenter(instance);\n      if (inheritable) {\n        Object.assign(tokens, inheritance(tokeniser));\n      }\n      tokens.open = tokeniser.consume(\"{\") || tokeniser.error(`Bodyless ${type}`);\n      instance.members = [];\n      while (true) {\n        tokens.close = tokeniser.consume(\"}\");\n        if (tokens.close) {\n          tokens.termination = tokeniser.consume(\";\") || tokeniser.error(`Missing semicolon after ${type}`);\n          return instance.this;\n        }\n        const ea = ExtendedAttributes.parse(tokeniser);\n        let mem;\n        for (const [parser, ...args] of allowedMembers) {\n          mem = autoParenter(parser(tokeniser, ...args));\n          if (mem) {\n            break;\n          }\n        }\n        if (!mem) {\n          tokeniser.error(\"Unknown member\");\n        }\n        mem.extAttrs = ea;\n        instance.members.push(mem.this);\n      }\n    }\n\n    get partial() {\n      return !!this.tokens.partial;\n    }\n    get name() {\n      return unescape(this.tokens.name.value);\n    }\n    get inheritance() {\n      if (!this.tokens.inheritance) {\n        return null;\n      }\n      return unescape(this.tokens.inheritance.value);\n    }\n\n    *validate(defs) {\n      for (const member of this.members) {\n        if (member.validate) {\n          yield* member.validate(defs);\n        }\n      }\n    }\n  }\n","import { Base } from \"./base.js\";\nimport { Type } from \"./type.js\";\nimport { const_data, const_value, primitive_type, autoParenter, unescape } from \"./helpers.js\";\n\nexport class Constant extends Base {\n  /**\n   * @param {import(\"../tokeniser.js\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    /** @type {Base[\"tokens\"]} */\n    const tokens = {};\n    tokens.base = tokeniser.consume(\"const\");\n    if (!tokens.base) {\n      return;\n    }\n    let idlType = primitive_type(tokeniser);\n    if (!idlType) {\n      const base = tokeniser.consume(\"identifier\") || tokeniser.error(\"Const lacks a type\");\n      idlType = new Type({ source: tokeniser.source, tokens: { base } });\n    }\n    if (tokeniser.probe(\"?\")) {\n      tokeniser.error(\"Unexpected nullable constant type\");\n    }\n    idlType.type = \"const-type\";\n    tokens.name = tokeniser.consume(\"identifier\") || tokeniser.error(\"Const lacks a name\");\n    tokens.assign = tokeniser.consume(\"=\") || tokeniser.error(\"Const lacks value assignment\");\n    tokens.value = const_value(tokeniser) || tokeniser.error(\"Const lacks a value\");\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"Unterminated const, expected `;`\");\n    const ret = new Constant({ source: tokeniser.source, tokens });\n    autoParenter(ret).idlType = idlType;\n    return ret;\n  }\n\n  get type() {\n    return \"const\";\n  }\n  get name() {\n    return unescape(this.tokens.name.value);\n  }\n  get value() {\n    return const_data(this.tokens.value);\n  }\n}\n","import { Base } from \"./base.js\";\nimport { type_with_extended_attributes, autoParenter } from \"./helpers.js\";\n\nexport class IterableLike extends Base {\n  /**\n   * @param {import(\"../tokeniser.js\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const start_position = tokeniser.position;\n    const tokens = {};\n    const ret = autoParenter(new IterableLike({ source: tokeniser.source, tokens }));\n    tokens.readonly = tokeniser.consume(\"readonly\");\n    if (!tokens.readonly) {\n      tokens.async = tokeniser.consume(\"async\");\n    }\n    tokens.base =\n      tokens.readonly ? tokeniser.consume(\"maplike\", \"setlike\") :\n      tokens.async ? tokeniser.consume(\"iterable\") :\n      tokeniser.consume(\"iterable\", \"maplike\", \"setlike\");\n    if (!tokens.base) {\n      tokeniser.unconsume(start_position);\n      return;\n    }\n\n    const { type } = ret;\n    const secondTypeRequired = type === \"maplike\" || ret.async;\n    const secondTypeAllowed = secondTypeRequired || type === \"iterable\";\n\n    tokens.open = tokeniser.consume(\"<\") || tokeniser.error(`Missing less-than sign \\`<\\` in ${type} declaration`);\n    const first = type_with_extended_attributes(tokeniser) || tokeniser.error(`Missing a type argument in ${type} declaration`);\n    ret.idlType = [first];\n    if (secondTypeAllowed) {\n      first.tokens.separator = tokeniser.consume(\",\");\n      if (first.tokens.separator) {\n        ret.idlType.push(type_with_extended_attributes(tokeniser));\n      }\n      else if (secondTypeRequired) {\n        tokeniser.error(`Missing second type argument in ${type} declaration`);\n      }\n    }\n    tokens.close = tokeniser.consume(\">\") || tokeniser.error(`Missing greater-than sign \\`>\\` in ${type} declaration`);\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(`Missing semicolon after ${type} declaration`);\n\n    return ret.this;\n  }\n\n  get type() {\n    return this.tokens.base.value;\n  }\n  get readonly() {\n    return !!this.tokens.readonly;\n  }\n  get async() {\n    return !!this.tokens.async;\n  }\n}\n","import { Base } from \"./base.js\";\nimport { argument_list, autoParenter } from \"./helpers.js\";\n\nexport class Constructor extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const base = tokeniser.consume(\"constructor\");\n    if (!base) {\n      return;\n    }\n    /** @type {Base[\"tokens\"]} */\n    const tokens = { base };\n    tokens.open = tokeniser.consume(\"(\") || tokeniser.error(\"No argument list in constructor\");\n    const args = argument_list(tokeniser);\n    tokens.close = tokeniser.consume(\")\") || tokeniser.error(\"Unterminated constructor\");\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"No semicolon after constructor\");\n    const ret = new Constructor({ source: tokeniser.source, tokens });\n    autoParenter(ret).arguments = args;\n    return ret;\n  }\n\n  get type() {\n    return \"constructor\";\n  }\n\n  *validate(defs) {\n    if (this.idlType) {\n      yield* this.idlType.validate(defs);\n    }\n    for (const argument of this.arguments) {\n      yield* argument.validate(defs);\n    }\n  }\n}\n","import { Container } from \"./container.js\";\nimport { Attribute } from \"./attribute.js\";\nimport { Operation } from \"./operation.js\";\nimport { Constant } from \"./constant.js\";\nimport { IterableLike } from \"./iterable.js\";\nimport { stringifier, autofixAddExposedWindow, getMemberIndentation, getLastIndentation, getFirstToken, findLastIndex, autoParenter } from \"./helpers.js\";\nimport { validationError } from \"../error.js\";\nimport { checkInterfaceMemberDuplication } from \"../validators/interface.js\";\nimport { Constructor } from \"./constructor.js\";\nimport { Tokeniser } from \"../tokeniser.js\";\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n */\nfunction static_member(tokeniser) {\n  const special = tokeniser.consume(\"static\");\n  if (!special) return;\n  const member = Attribute.parse(tokeniser, { special }) ||\n    Operation.parse(tokeniser, { special }) ||\n    tokeniser.error(\"No body in static member\");\n  return member;\n}\n\nexport class Interface extends Container {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser, base, { partial = null } = {}) {\n    const tokens = { partial, base };\n    return Container.parse(tokeniser, new Interface({ source: tokeniser.source, tokens }), {\n      type: \"interface\",\n      inheritable: !partial,\n      allowedMembers: [\n        [Constant.parse],\n        [Constructor.parse],\n        [static_member],\n        [stringifier],\n        [IterableLike.parse],\n        [Attribute.parse],\n        [Operation.parse]\n      ]\n    });\n  }\n\n  get type() {\n    return \"interface\";\n  }\n\n  *validate(defs) {\n    yield* this.extAttrs.validate(defs);\n    if (\n      !this.partial &&\n      this.extAttrs.every(extAttr => extAttr.name !== \"Exposed\") &&\n      this.extAttrs.every(extAttr => extAttr.name !== \"NoInterfaceObject\")\n    ) {\n      const message = `Interfaces must have \\`[Exposed]\\` extended attribute. \\\nTo fix, add, for example, \\`[Exposed=Window]\\`. Please also consider carefully \\\nif your interface should also be exposed in a Worker scope. Refer to the \\\n[WebIDL spec section on Exposed](https://heycam.github.io/webidl/#Exposed) \\\nfor more information.`;\n      yield validationError(this.tokens.name, this, \"require-exposed\", message, {\n        autofix: autofixAddExposedWindow(this)\n      });\n    }\n    const oldConstructors = this.extAttrs.filter(extAttr => extAttr.name === \"Constructor\");\n    for (const constructor of oldConstructors) {\n      const message = `Constructors should now be represented as a \\`constructor()\\` operation on the interface \\\ninstead of \\`[Constructor]\\` extended attribute. Refer to the \\\n[WebIDL spec section on constructor operations](https://heycam.github.io/webidl/#idl-constructors) \\\nfor more information.`;\n      yield validationError(constructor.tokens.name, this, \"constructor-member\", message, {\n        autofix: autofixConstructor(this, constructor)\n      });\n    }\n\n    const isGlobal = this.extAttrs.some(extAttr => extAttr.name === \"Global\");\n    if (isGlobal) {\n      const namedConstructors = this.extAttrs.filter(extAttr => extAttr.name === \"NamedConstructor\");\n      for (const named of namedConstructors) {\n        const message = `Interfaces marked as \\`[Global]\\` cannot have named constructors.`;\n        yield validationError(named.tokens.name, this, \"no-constructible-global\", message);\n      }\n\n      const constructors = this.members.filter(member => member.type === \"constructor\");\n      for (const named of constructors) {\n        const message = `Interfaces marked as \\`[Global]\\` cannot have constructors.`;\n        yield validationError(named.tokens.base, this, \"no-constructible-global\", message);\n      }\n    }\n\n    yield* super.validate(defs);\n    if (!this.partial) {\n      yield* checkInterfaceMemberDuplication(defs, this);\n    }\n  }\n}\n\nfunction autofixConstructor(interfaceDef, constructorExtAttr) {\n  interfaceDef = autoParenter(interfaceDef);\n  return () => {\n    const indentation = getLastIndentation(interfaceDef.extAttrs.tokens.open.trivia);\n    const memberIndent = interfaceDef.members.length ?\n      getLastIndentation(getFirstToken(interfaceDef.members[0]).trivia) :\n      getMemberIndentation(indentation);\n    const constructorOp = Constructor.parse(new Tokeniser(`\\n${memberIndent}constructor();`));\n    constructorOp.extAttrs = [];\n    autoParenter(constructorOp).arguments = constructorExtAttr.arguments;\n\n    const existingIndex = findLastIndex(interfaceDef.members, m => m.type === \"constructor\");\n    interfaceDef.members.splice(existingIndex + 1, 0, constructorOp);\n\n    const { close }  = interfaceDef.tokens;\n    if (!close.trivia.includes(\"\\n\")) {\n      close.trivia += `\\n${indentation}`;\n    }\n\n    const { extAttrs } = interfaceDef;\n    const index = extAttrs.indexOf(constructorExtAttr);\n    const removed = extAttrs.splice(index, 1);\n    if (!extAttrs.length) {\n      extAttrs.tokens.open = extAttrs.tokens.close = undefined;\n    } else if (extAttrs.length === index) {\n      extAttrs[index - 1].tokens.separator = undefined;\n    } else if (!extAttrs[index].tokens.name.trivia.trim()) {\n      extAttrs[index].tokens.name.trivia = removed[0].tokens.name.trivia;\n    }\n  };\n}\n","// @ts-check\n\nimport { validationError } from \"../error.js\";\n\nexport function* checkInterfaceMemberDuplication(defs, i) {\n  const opNames = new Set(getOperations(i).map(op => op.name));\n  const partials = defs.partials.get(i.name) || [];\n  const mixins = defs.mixinMap.get(i.name) || [];\n  for (const ext of [...partials, ...mixins]) {\n    const additions = getOperations(ext);\n    yield* forEachExtension(additions, opNames, ext, i);\n    for (const addition of additions) {\n      opNames.add(addition.name);\n    }\n  }\n\n  function* forEachExtension(additions, existings, ext, base) {\n    for (const addition of additions) {\n      const { name } = addition;\n      if (name && existings.has(name)) {\n        const message = `The operation \"${name}\" has already been defined for the base interface \"${base.name}\" either in itself or in a mixin`;\n        yield validationError(addition.tokens.name, ext, \"no-cross-overload\", message);\n      }\n    }\n  }\n\n  function getOperations(i) {\n    return i.members\n      .filter(({type}) => type === \"operation\");\n  }\n}\n","import { Container } from \"./container.js\";\nimport { Constant } from \"./constant.js\";\nimport { Attribute } from \"./attribute.js\";\nimport { Operation } from \"./operation.js\";\nimport { stringifier } from \"./helpers.js\";\n\nexport class Mixin extends Container {\n  /**\n   * @typedef {import(\"../tokeniser.js\").Token} Token\n   *\n   * @param {import(\"../tokeniser.js\").Tokeniser} tokeniser\n   * @param {Token} base\n   * @param {object} [options]\n   * @param {Token} [options.partial]\n   */\n  static parse(tokeniser, base, { partial } = {}) {\n    const tokens = { partial, base };\n    tokens.mixin = tokeniser.consume(\"mixin\");\n    if (!tokens.mixin) {\n      return;\n    }\n    return Container.parse(tokeniser, new Mixin({ source: tokeniser.source, tokens }), {\n      type: \"interface mixin\",\n      allowedMembers: [\n        [Constant.parse],\n        [stringifier],\n        [Attribute.parse, { noInherit: true }],\n        [Operation.parse, { regular: true }]\n      ]\n    });\n  }\n\n  get type() {\n    return \"interface mixin\";\n  }\n}\n","import { Base } from \"./base.js\";\nimport { unescape, type_with_extended_attributes, autoParenter } from \"./helpers.js\";\nimport { ExtendedAttributes } from \"./extended-attributes.js\";\nimport { Default } from \"./default.js\";\n\nexport class Field extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    /** @type {Base[\"tokens\"]} */\n    const tokens = {};\n    const ret = autoParenter(new Field({ source: tokeniser.source, tokens }));\n    ret.extAttrs = ExtendedAttributes.parse(tokeniser);\n    tokens.required = tokeniser.consume(\"required\");\n    ret.idlType = type_with_extended_attributes(tokeniser, \"dictionary-type\") || tokeniser.error(\"Dictionary member lacks a type\");\n    tokens.name = tokeniser.consume(\"identifier\") || tokeniser.error(\"Dictionary member lacks a name\");\n    ret.default = Default.parse(tokeniser);\n    if (tokens.required && ret.default) tokeniser.error(\"Required member must not have a default\");\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"Unterminated dictionary member, expected `;`\");\n    return ret.this;\n  }\n\n  get type() {\n    return \"field\";\n  }\n  get name() {\n    return unescape(this.tokens.name.value);\n  }\n  get required() {\n    return !!this.tokens.required;\n  }\n\n  *validate(defs) {\n    yield* this.idlType.validate(defs);\n  }\n}\n","// @ts-check\n\nimport { Container } from \"./container.js\";\nimport { Field } from \"./field.js\";\n\nexport class Dictionary extends Container {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   * @param {object} [options]\n   * @param {import(\"../tokeniser.js\").Token} [options.partial]\n   */\n  static parse(tokeniser, { partial } = {}) {\n    const tokens = { partial };\n    tokens.base = tokeniser.consume(\"dictionary\");\n    if (!tokens.base) {\n      return;\n    }\n    return Container.parse(tokeniser, new Dictionary({ source: tokeniser.source, tokens }), {\n      type: \"dictionary\",\n      inheritable: !partial,\n      allowedMembers: [\n        [Field.parse],\n      ]\n    });\n  }\n\n  get type() {\n    return \"dictionary\";\n  }\n}\n","import { Container } from \"./container.js\";\nimport { Attribute } from \"./attribute.js\";\nimport { Operation } from \"./operation.js\";\nimport { validationError } from \"../error.js\";\nimport { autofixAddExposedWindow } from \"./helpers.js\";\n\nexport class Namespace extends Container {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   * @param {object} [options]\n   * @param {import(\"../tokeniser.js\").Token} [options.partial]\n   */\n  static parse(tokeniser, { partial } = {}) {\n    const tokens = { partial };\n    tokens.base = tokeniser.consume(\"namespace\");\n    if (!tokens.base) {\n      return;\n    }\n    return Container.parse(tokeniser, new Namespace({ source: tokeniser.source, tokens }), {\n      type: \"namespace\",\n      allowedMembers: [\n        [Attribute.parse, { noInherit: true, readonly: true }],\n        [Operation.parse, { regular: true }]\n      ]\n    });\n  }\n\n  get type() {\n    return \"namespace\";\n  }\n\n  *validate(defs) {\n    if (!this.partial && this.extAttrs.every(extAttr => extAttr.name !== \"Exposed\")) {\n      const message = `Namespaces must have [Exposed] extended attribute. \\\nTo fix, add, for example, [Exposed=Window]. Please also consider carefully \\\nif your namespace should also be exposed in a Worker scope. Refer to the \\\n[WebIDL spec section on Exposed](https://heycam.github.io/webidl/#Exposed) \\\nfor more information.`;\n      yield validationError(this.tokens.name, this, \"require-exposed\", message, {\n        autofix: autofixAddExposedWindow(this)\n      });\n    }\n    yield* super.validate(defs);\n  }\n}\n","// @ts-check\n\nimport { Container } from \"./container.js\";\nimport { Operation } from \"./operation.js\";\nimport { Constant } from \"./constant.js\";\n\nexport class CallbackInterface extends Container {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser, callback, { partial = null } = {}) {\n    const tokens = { callback };\n    tokens.base = tokeniser.consume(\"interface\");\n    if (!tokens.base) {\n      return;\n    }\n    return Container.parse(tokeniser, new CallbackInterface({ source: tokeniser.source, tokens }), {\n      type: \"callback interface\",\n      inheritable: !partial,\n      allowedMembers: [\n        [Constant.parse],\n        [Operation.parse, { regular: true }]\n      ]\n    });\n  }\n\n  get type() {\n    return \"callback interface\";\n  }\n}\n","\"use strict\";\n\nimport { Tokeniser } from \"./tokeniser.js\";\nimport { Enum } from \"./productions/enum.js\";\nimport { Includes } from \"./productions/includes.js\";\nimport { ExtendedAttributes } from \"./productions/extended-attributes.js\";\nimport { Typedef } from \"./productions/typedef.js\";\nimport { CallbackFunction } from \"./productions/callback.js\";\nimport { Interface } from \"./productions/interface.js\";\nimport { Mixin } from \"./productions/mixin.js\";\nimport { Dictionary } from \"./productions/dictionary.js\";\nimport { Namespace } from \"./productions/namespace.js\";\nimport { CallbackInterface } from \"./productions/callback-interface.js\";\nimport { autoParenter } from \"./productions/helpers.js\";\n\n/**\n * @param {Tokeniser} tokeniser\n * @param {object} options\n * @param {boolean} [options.concrete]\n */\nfunction parseByTokens(tokeniser, options) {\n  const source = tokeniser.source;\n\n  function error(str) {\n    tokeniser.error(str);\n  }\n\n  function consume(...candidates) {\n    return tokeniser.consume(...candidates);\n  }\n\n  function callback() {\n    const callback = consume(\"callback\");\n    if (!callback) return;\n    if (tokeniser.probe(\"interface\")) {\n      return CallbackInterface.parse(tokeniser, callback);\n    }\n    return CallbackFunction.parse(tokeniser, callback);\n  }\n\n  function interface_(opts) {\n    const base = consume(\"interface\");\n    if (!base) return;\n    const ret = Mixin.parse(tokeniser, base, opts) ||\n      Interface.parse(tokeniser, base, opts) ||\n      error(\"Interface has no proper body\");\n    return ret;\n  }\n\n  function partial() {\n    const partial = consume(\"partial\");\n    if (!partial) return;\n    return Dictionary.parse(tokeniser, { partial }) ||\n      interface_({ partial }) ||\n      Namespace.parse(tokeniser, { partial }) ||\n      error(\"Partial doesn't apply to anything\");\n  }\n\n  function definition() {\n    return callback() ||\n      interface_() ||\n      partial() ||\n      Dictionary.parse(tokeniser) ||\n      Enum.parse(tokeniser) ||\n      Typedef.parse(tokeniser) ||\n      Includes.parse(tokeniser) ||\n      Namespace.parse(tokeniser);\n  }\n\n  function definitions() {\n    if (!source.length) return [];\n    const defs = [];\n    while (true) {\n      const ea = ExtendedAttributes.parse(tokeniser);\n      const def = definition();\n      if (!def) {\n        if (ea.length) error(\"Stray extended attributes\");\n        break;\n      }\n      autoParenter(def).extAttrs = ea;\n      defs.push(def);\n    }\n    const eof = consume(\"eof\");\n    if (options.concrete) {\n      defs.push(eof);\n    }\n    return defs;\n  }\n  const res = definitions();\n  if (tokeniser.position < source.length) error(\"Unrecognised tokens\");\n  return res;\n}\n\n/**\n * @param {string} str\n * @param {object} [options]\n * @param {*} [options.sourceName]\n * @param {boolean} [options.concrete]\n */\nexport function parse(str, options = {}) {\n  const tokeniser = new Tokeniser(str);\n  if (typeof options.sourceName !== \"undefined\") {\n    tokeniser.source.name = options.sourceName;\n  }\n  return parseByTokens(tokeniser, options);\n}\n","\"use strict\";\n\nfunction noop(arg) {\n  return arg;\n}\n\nconst templates = {\n  wrap: items => items.join(\"\"),\n  trivia: noop,\n  name: noop,\n  reference: noop,\n  type: noop,\n  generic: noop,\n  nameless: noop,\n  inheritance: noop,\n  definition: noop,\n  extendedAttribute: noop,\n  extendedAttributeReference: noop\n};\n\nexport function write(ast, { templates: ts = templates } = {}) {\n  ts = Object.assign({}, templates, ts);\n\n  function reference(raw, { unescaped, context }) {\n    if (!unescaped) {\n      unescaped = raw.startsWith(\"_\") ? raw.slice(1) : raw;\n    }\n    return ts.reference(raw, unescaped, context);\n  }\n\n  function token(t, wrapper = noop, ...args) {\n    if (!t) {\n      return \"\";\n    }\n    const value = wrapper(t.value, ...args);\n    return ts.wrap([ts.trivia(t.trivia), value]);\n  }\n\n  function reference_token(t, context) {\n    return token(t, reference, { context });\n  }\n\n  function name_token(t, arg) {\n    return token(t, ts.name, arg);\n  }\n\n  function type_body(it) {\n    if (it.union || it.generic) {\n      return ts.wrap([\n        token(it.tokens.base, ts.generic),\n        token(it.tokens.open),\n        ...it.subtype.map(type),\n        token(it.tokens.close)\n      ]);\n    }\n    const firstToken = it.tokens.prefix || it.tokens.base;\n    const prefix = it.tokens.prefix ? [\n      it.tokens.prefix.value,\n      ts.trivia(it.tokens.base.trivia)\n    ] : [];\n    const ref = reference(ts.wrap([\n      ...prefix,\n      it.tokens.base.value,\n      token(it.tokens.postfix)\n    ]), { unescaped: it.idlType, context: it });\n    return ts.wrap([ts.trivia(firstToken.trivia), ref]);\n  }\n  function type(it) {\n    return ts.wrap([\n      extended_attributes(it.extAttrs),\n      type_body(it),\n      token(it.tokens.nullable),\n      token(it.tokens.separator)\n    ]);\n  }\n  function default_(def) {\n    if (!def) {\n      return \"\";\n    }\n    return ts.wrap([\n      token(def.tokens.assign),\n      ...def.expression.map(t => token(t))\n    ]);\n  }\n  function argument(arg) {\n    return ts.wrap([\n      extended_attributes(arg.extAttrs),\n      token(arg.tokens.optional),\n      ts.type(type(arg.idlType)),\n      token(arg.tokens.variadic),\n      name_token(arg.tokens.name, { data: arg }),\n      default_(arg.default),\n      token(arg.tokens.separator)\n    ]);\n  }\n  function extended_attribute_listitem(str) {\n    return ts.wrap([\n      token(str.tokens.value),\n      token(str.tokens.separator)\n    ]);\n  }\n  function identifier(id, context) {\n    return ts.wrap([\n      reference_token(id.tokens.value, context),\n      token(id.tokens.separator)\n    ]);\n  }\n  function make_ext_at(it) {\n    const { rhsType } = it.params;\n    return ts.wrap([\n      ts.trivia(it.tokens.name.trivia),\n      ts.extendedAttribute(ts.wrap([\n        ts.extendedAttributeReference(it.name),\n        token(it.params.tokens.assign),\n        reference_token(it.params.tokens.secondaryName, it),\n        token(it.params.tokens.open),\n        ...!it.params.list ? [] :\n          it.params.list.map(\n            rhsType === \"identifier-list\" ? id => identifier(id, it) :\n            rhsType && rhsType.endsWith(\"-list\") ? extended_attribute_listitem :\n            argument\n          ),\n        token(it.params.tokens.close)\n      ])),\n      token(it.tokens.separator)\n    ]);\n  }\n  function extended_attributes(eats) {\n    if (!eats.length) return \"\";\n    return ts.wrap([\n      token(eats.tokens.open),\n      ...eats.map(make_ext_at),\n      token(eats.tokens.close)\n    ]);\n  }\n\n  function operation(it, parent) {\n    const body = it.idlType ? [\n      ts.type(type(it.idlType)),\n      name_token(it.tokens.name, { data: it, parent }),\n      token(it.tokens.open),\n      ts.wrap(it.arguments.map(argument)),\n      token(it.tokens.close),\n    ] : [];\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      it.tokens.name ? token(it.tokens.special) : token(it.tokens.special, ts.nameless, { data: it, parent }),\n      ...body,\n      token(it.tokens.termination)\n    ]), { data: it, parent });\n  }\n\n  function attribute(it, parent) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.special),\n      token(it.tokens.readonly),\n      token(it.tokens.base),\n      ts.type(type(it.idlType)),\n      name_token(it.tokens.name, { data: it, parent }),\n      token(it.tokens.termination)\n    ]), { data: it, parent });\n  }\n\n  function constructor(it, parent) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.base, ts.nameless, { data: it, parent }),\n      token(it.tokens.open),\n      ts.wrap(it.arguments.map(argument)),\n      token(it.tokens.close),\n      token(it.tokens.termination)\n    ]), { data: it, parent });\n  }\n\n  function inheritance(inh) {\n    if (!inh.tokens.inheritance) {\n      return \"\";\n    }\n    return ts.wrap([\n      token(inh.tokens.colon),\n      ts.trivia(inh.tokens.inheritance.trivia),\n      ts.inheritance(reference(inh.tokens.inheritance.value, { context: inh }))\n    ]);\n  }\n\n  function container(it) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.callback),\n      token(it.tokens.partial),\n      token(it.tokens.base),\n      token(it.tokens.mixin),\n      name_token(it.tokens.name, { data: it }),\n      inheritance(it),\n      token(it.tokens.open),\n      iterate(it.members, it),\n      token(it.tokens.close),\n      token(it.tokens.termination)\n    ]), { data: it });\n  }\n\n  function field(it, parent) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.required),\n      ts.type(type(it.idlType)),\n      name_token(it.tokens.name, { data: it, parent }),\n      default_(it.default),\n      token(it.tokens.termination)\n    ]), { data: it, parent });\n  }\n  function const_(it, parent) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.base),\n      ts.type(type(it.idlType)),\n      name_token(it.tokens.name, { data: it, parent }),\n      token(it.tokens.assign),\n      token(it.tokens.value),\n      token(it.tokens.termination)\n    ]), { data: it, parent });\n  }\n  function typedef(it) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.base),\n      ts.type(type(it.idlType)),\n      name_token(it.tokens.name, { data: it }),\n      token(it.tokens.termination)\n    ]), { data: it });\n  }\n  function includes(it) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      reference_token(it.tokens.target, it),\n      token(it.tokens.includes),\n      reference_token(it.tokens.mixin, it),\n      token(it.tokens.termination)\n    ]), { data: it });\n  }\n  function callback(it) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.base),\n      name_token(it.tokens.name, { data: it }),\n      token(it.tokens.assign),\n      ts.type(type(it.idlType)),\n      token(it.tokens.open),\n      ...it.arguments.map(argument),\n      token(it.tokens.close),\n      token(it.tokens.termination),\n    ]), { data: it });\n  }\n  function enum_(it) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.base),\n      name_token(it.tokens.name, { data: it }),\n      token(it.tokens.open),\n      iterate(it.values, it),\n      token(it.tokens.close),\n      token(it.tokens.termination)\n    ]), { data: it });\n  }\n  function enum_value(v, parent) {\n    return ts.wrap([\n      ts.trivia(v.tokens.value.trivia),\n      ts.definition(\n        ts.wrap(['\"', ts.name(v.value, { data: v, parent }), '\"']),\n        { data: v, parent }\n      ),\n      token(v.tokens.separator)\n    ]);\n  }\n  function iterable_like(it, parent) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.readonly),\n      token(it.tokens.async),\n      token(it.tokens.base, ts.generic),\n      token(it.tokens.open),\n      ts.wrap(it.idlType.map(type)),\n      token(it.tokens.close),\n      token(it.tokens.termination)\n    ]), { data: it, parent });\n  }\n  function eof(it) {\n    return ts.trivia(it.trivia);\n  }\n\n  const table = {\n    interface: container,\n    \"interface mixin\": container,\n    namespace: container,\n    operation,\n    attribute,\n    constructor,\n    dictionary: container,\n    field,\n    const: const_,\n    typedef,\n    includes,\n    callback,\n    enum: enum_,\n    \"enum-value\": enum_value,\n    iterable: iterable_like,\n    maplike: iterable_like,\n    setlike: iterable_like,\n    \"callback interface\": container,\n    eof\n  };\n  function dispatch(it, parent) {\n    const dispatcher = table[it.type];\n    if (!dispatcher) {\n      throw new Error(`Type \"${it.type}\" is unsupported`);\n    }\n    return table[it.type](it, parent);\n  }\n  function iterate(things, parent) {\n    if (!things) return;\n    const results = things.map(thing => dispatch(thing, parent));\n    return ts.wrap(results);\n  }\n  return iterate(ast);\n}\n","\"use strict\";\n\nimport { validationError as error } from \"./error.js\";\n\nfunction getMixinMap(all, unique) {\n  const map = new Map();\n  const includes = all.filter(def => def.type === \"includes\");\n  for (const include of includes) {\n    const mixin = unique.get(include.includes);\n    if (!mixin) {\n      continue;\n    }\n    const array = map.get(include.target);\n    if (array) {\n      array.push(mixin);\n    } else {\n      map.set(include.target, [mixin]);\n    }\n  }\n  return map;\n}\n\n/**\n * @typedef {ReturnType<typeof groupDefinitions>} Definitions\n */\nfunction groupDefinitions(all) {\n  const unique = new Map();\n  const duplicates = new Set();\n  const partials = new Map();\n  for (const def of all) {\n    if (def.partial) {\n      const array = partials.get(def.name);\n      if (array) {\n        array.push(def);\n      } else {\n        partials.set(def.name, [def]);\n      }\n      continue;\n    }\n    if (!def.name) {\n      continue;\n    }\n    if (!unique.has(def.name)) {\n      unique.set(def.name, def);\n    } else {\n      duplicates.add(def);\n    }\n  }\n  return {\n    all,\n    unique,\n    partials,\n    duplicates,\n    mixinMap: getMixinMap(all, unique),\n    cache: {\n      typedefIncludesDictionary: new WeakMap(),\n      dictionaryIncludesRequiredField: new WeakMap()\n    },\n  };\n}\n\nfunction* checkDuplicatedNames({ unique, duplicates }) {\n  for (const dup of duplicates) {\n    const { name } = dup;\n    const message = `The name \"${name}\" of type \"${unique.get(name).type}\" was already seen`;\n    yield error(dup.tokens.name, dup, \"no-duplicate\", message);\n  }\n}\n\nfunction* validateIterable(ast) {\n  const defs = groupDefinitions(ast);\n  for (const def of defs.all) {\n    if (def.validate) {\n      yield* def.validate(defs);\n    }\n  }\n  yield* checkDuplicatedNames(defs);\n}\n\n// Remove this once all of our support targets expose `.flat()` by default\nfunction flatten(array) {\n  if (array.flat) {\n    return array.flat();\n  }\n  return [].concat(...array);\n}\n\n/**\n * @param {*} ast AST or array of ASTs\n */\nexport function validate(ast) {\n  return [...validateIterable(flatten(ast))];\n}\n","export { parse } from \"./lib/webidl2.js\";\nexport { write } from \"./lib/writer.js\";\nexport { validate } from \"./lib/validator.js\";\nexport { WebIDLParseError } from \"./lib/tokeniser.js\";\n"],"sourceRoot":""}